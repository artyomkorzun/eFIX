plugins {
    id 'java'
    id 'idea'
    id 'me.champeau.gradle.jmh' version '0.2.0'
    id "maven"
    id 'maven-publish'
}

group = 'org.efix'
version = '0.2.5'

repositories {
    mavenCentral()
}

configurations {
    deployerJars
}

dependencies {
    testCompile 'junit:junit:4.12'

    deployerJars "org.apache.maven.wagon:wagon-ssh:2.2"
}

compileJava {
    // Suppress warnings about using Unsafe and sun.misc
    options.compilerArgs << '-XDignore.symbol.file'
    options.fork = true
    options.forkOptions.executable = 'javac'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    //archives javadocJar
}

jmhJar {
    outputs.upToDateWhen { false }
}

jmh {
    jmhVersion = '1.11.2'
    include = 'MessageParser'
    benchmarkMode = 'avgt'
    timeUnit = 'ns'
    warmup = '3s'
    warmupIterations = 2
    timeOnIteration = '5s'
    iterations = 3
    threads = 1
    fork = 1
    jvmArgsAppend = '-Defix.disable.bounds.check=true'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourcesJar
        }
    }
}

uploadArchives {
    repositories {
        mavenDeployer {
            configuration = configurations.deployerJars
            repository(url: publishRepositoryUrl) {
                authentication(userName: publisherUsername, password: publisherPassword) {
                    preemptive = true
                }
            }
        }
    }
}