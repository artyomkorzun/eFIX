package org.efix.message.field;

import org.efix.util.ByteSequence;
import org.efix.util.ByteSequenceWrapper;


public class SecurityType {

    public static final ByteSequence WILDCARD = ByteSequenceWrapper.of("?");
    public static final ByteSequence OTHER_ANTICIPATION_NOTES = ByteSequenceWrapper.of("AN");
    public static final ByteSequence BANKERS_ACCEPTANCE = ByteSequenceWrapper.of("BA");
    public static final ByteSequence BANK_NOTES = ByteSequenceWrapper.of("BN");
    public static final ByteSequence CONVERTIBLE_BOND = ByteSequenceWrapper.of("CB");
    public static final ByteSequence CERTIFICATE_OF_DEPOSIT = ByteSequenceWrapper.of("CD");
    public static final ByteSequence CALL_LOANS = ByteSequenceWrapper.of("CL");
    public static final ByteSequence COMMERCIAL_PAPER = ByteSequenceWrapper.of("CP");
    public static final ByteSequence COMMON_STOCK = ByteSequenceWrapper.of("CS");
    public static final ByteSequence DEPOSIT_NOTES = ByteSequenceWrapper.of("DN");
    public static final ByteSequence GENERAL_OBLIGATION_BONDS = ByteSequenceWrapper.of("GO");
    public static final ByteSequence MUTUAL_FUND = ByteSequenceWrapper.of("MF");
    public static final ByteSequence MANDATORY_TENDER = ByteSequenceWrapper.of("MT");
    public static final ByteSequence PROMISSORY_NOTE = ByteSequenceWrapper.of("PN");
    public static final ByteSequence PREFERRED_STOCK = ByteSequenceWrapper.of("PS");
    public static final ByteSequence TIME_DEPOSIT = ByteSequenceWrapper.of("TD");
    public static final ByteSequence ASSET_BACKED_SECURITIES = ByteSequenceWrapper.of("ABS");
    public static final ByteSequence BILL_OF_EXCHANGES = ByteSequenceWrapper.of("BOX");
    public static final ByteSequence COLLATERALIZED_MORTGAGE_OBLIGATION = ByteSequenceWrapper.of("CMO");
    public static final ByteSequence CORPORATE_PRIVATE_PLACEMENT = ByteSequenceWrapper.of("CPP");
    public static final ByteSequence FEDERAL_AGENCY_COUPON = ByteSequenceWrapper.of("FAC");
    public static final ByteSequence FOREIGN_EXCHANGE_CONTRACT = ByteSequenceWrapper.of("FOR");
    public static final ByteSequence FUTURE = ByteSequenceWrapper.of("FUT");
    public static final ByteSequence IOETTE_MORTGAGE = ByteSequenceWrapper.of("IET");
    public static final ByteSequence LIQUIDITY_NOTE = ByteSequenceWrapper.of("LQN");
    public static final ByteSequence MORTGAGE_BACKED_SECURITIES = ByteSequenceWrapper.of("MBS");
    public static final ByteSequence MORTGAGE_INTEREST_ONLY = ByteSequenceWrapper.of("MIO");
    public static final ByteSequence MORTGAGE_PRINCIPAL_ONLY = ByteSequenceWrapper.of("MPO");
    public static final ByteSequence MORTGAGE_PRIVATE_PLACEMENT = ByteSequenceWrapper.of("MPP");
    public static final ByteSequence MISCELLANEOUS_PASS_THROUGH = ByteSequenceWrapper.of("MPT");
    public static final ByteSequence MEDIUM_TERM_NOTES = ByteSequenceWrapper.of("MTN");
    public static final ByteSequence OPTIONS_ON_FUTURES = ByteSequenceWrapper.of("OOF");
    public static final ByteSequence OPTIONS_ON_PHYSICAL = ByteSequenceWrapper.of("OOP");
    public static final ByteSequence OPTION = ByteSequenceWrapper.of("OPT");
    public static final ByteSequence PRIVATE_EXPORT_FUNDING = ByteSequenceWrapper.of("PEF");
    public static final ByteSequence REVENUE_ANTICIPATION_NOTE = ByteSequenceWrapper.of("RAN");
    public static final ByteSequence REVENUE_BONDS = ByteSequenceWrapper.of("REV");
    public static final ByteSequence SHORT_TERM_LOAN_NOTE = ByteSequenceWrapper.of("STN");
    public static final ByteSequence TAX_ANTICIPATION_NOTE = ByteSequenceWrapper.of("TAN");
    public static final ByteSequence TO_BE_ANNOUNCED = ByteSequenceWrapper.of("TBA");
    public static final ByteSequence US_TREASURY_NOTE2 = ByteSequenceWrapper.of("UST");
    public static final ByteSequence WARRANT = ByteSequenceWrapper.of("WAR");
    public static final ByteSequence _UNKNOWN = ByteSequenceWrapper.of("WLD");
    public static final ByteSequence EXTENDED_COMM_NOTE = ByteSequenceWrapper.of("XCN");
    public static final ByteSequence YANKEE_CERTIFICATE_OF_DEPOSIT = ByteSequenceWrapper.of("YCD");
    public static final ByteSequence CASH = ByteSequenceWrapper.of("CASH");
    public static final ByteSequence CORP_MORTGAGE_BACKED_SECURITIES = ByteSequenceWrapper.of("CMBS");
    public static final ByteSequence CERTIFICATE_OF_OBLIGATION = ByteSequenceWrapper.of("COFO");
    public static final ByteSequence CERTIFICATE_OF_PARTICIPATION = ByteSequenceWrapper.of("COFP");
    public static final ByteSequence CORPORATE_BOND = ByteSequenceWrapper.of("CORP");
    public static final ByteSequence DEBTOR_IN_POSSESSION = ByteSequenceWrapper.of("DINP");
    public static final ByteSequence DUAL_CURRENCY = ByteSequenceWrapper.of("DUAL");
    public static final ByteSequence EURO_CERTIFICATE_OF_DEPOSIT = ByteSequenceWrapper.of("EUCD");
    public static final ByteSequence EURO_COMMERCIAL_PAPER = ByteSequenceWrapper.of("EUCP");
    public static final ByteSequence FEDERAL_AGENCY_DISCOUNT_NOTE = ByteSequenceWrapper.of("FADN");
    public static final ByteSequence LETTER_OF_CREDIT = ByteSequenceWrapper.of("LOFC");
    public static final ByteSequence MULTI_LEG_INSTRUMENT = ByteSequenceWrapper.of("MLEG");
    public static final ByteSequence NO_SECURITY_TYPE = ByteSequenceWrapper.of("NONE");
    public static final ByteSequence PLAZOS_FIJOS = ByteSequenceWrapper.of("PZFJ");
    public static final ByteSequence REPURCHASE = ByteSequenceWrapper.of("REPO");
    public static final ByteSequence REVOLVER_LOAN = ByteSequenceWrapper.of("RVLV");
    public static final ByteSequence TAX_ALLOCATION = ByteSequenceWrapper.of("TAXA");
    public static final ByteSequence PRINCIPAL_STRIP_OF_A_CALLABLE_BOND_OR_NOTE = ByteSequenceWrapper.of("TCAL");
    public static final ByteSequence TAX_EXEMPT_COMMERCIAL_PAPER = ByteSequenceWrapper.of("TECP");
    public static final ByteSequence TERM_LOAN = ByteSequenceWrapper.of("TERM");
    public static final ByteSequence INTEREST_STRIP_FROM_ANY_BOND_OR_NOTE = ByteSequenceWrapper.of("TINT");
    public static final ByteSequence TREASURY_INFLATION_PROTECTED_SECURITIES = ByteSequenceWrapper.of("TIPS");
    public static final ByteSequence PRINCIPAL_STRIP_FROM_A_NON_CALLABLE_BOND_OR_NOTE = ByteSequenceWrapper.of("TPRN");
    public static final ByteSequence TAX_AND_REVENUE_ANTICIPATION_NOTE = ByteSequenceWrapper.of("TRAN");
    public static final ByteSequence US_TREASURY_BILL2 = ByteSequenceWrapper.of("USTB");
    public static final ByteSequence VARIABLE_RATE_DEMAND_NOTE = ByteSequenceWrapper.of("VRDN");
    public static final ByteSequence YANKEE_CORPORATE_BOND = ByteSequenceWrapper.of("YANK");
    public static final ByteSequence BRADY_BOND = ByteSequenceWrapper.of("BRADY");
    public static final ByteSequence EURO_SOVEREIGNS = ByteSequenceWrapper.of("EUSOV");
    public static final ByteSequence OVERNIGHT = ByteSequenceWrapper.of("ONITE");
    public static final ByteSequence PFANDBRIEFE = ByteSequenceWrapper.of("PFAND");
    public static final ByteSequence SPECIAL_ASSESSMENT = ByteSequenceWrapper.of("SPCLA");
    public static final ByteSequence SPECIAL_OBLIGATION = ByteSequenceWrapper.of("SPCLO");
    public static final ByteSequence SPECIAL_TAX = ByteSequenceWrapper.of("SPCLT");
    public static final ByteSequence USD_SUPRANATIONAL_COUPONS = ByteSequenceWrapper.of("SUPRA");
    public static final ByteSequence SWING_LINE_FACILITY = ByteSequenceWrapper.of("SWING");
    public static final ByteSequence US_TREASURY_BILL = ByteSequenceWrapper.of("TBILL");
    public static final ByteSequence US_TREASURY_BOND = ByteSequenceWrapper.of("TBOND");
    public static final ByteSequence US_TREASURY_NOTE = ByteSequenceWrapper.of("TNOTE");
    public static final ByteSequence BRIDGE_LOAN = ByteSequenceWrapper.of("BRIDGE");
    public static final ByteSequence EURO_CORPORATE_BOND = ByteSequenceWrapper.of("EUCORP");
    public static final ByteSequence STRUCTURED_NOTES = ByteSequenceWrapper.of("STRUCT");
    public static final ByteSequence INDEXED_LINKED = ByteSequenceWrapper.of("XLINKD");
    public static final ByteSequence AMENDED_AND_RESTATED = ByteSequenceWrapper.of("AMENDED");
    public static final ByteSequence BUY_SELLBACK = ByteSequenceWrapper.of("BUYSELL");
    public static final ByteSequence DEFAULTED = ByteSequenceWrapper.of("DEFLTED");
    public static final ByteSequence EURO_SUPRANATIONAL_COUPONS = ByteSequenceWrapper.of("EUSUPRA");
    public static final ByteSequence FORWARD = ByteSequenceWrapper.of("FORWARD");
    public static final ByteSequence MATURED = ByteSequenceWrapper.of("MATURED");
    public static final ByteSequence REPLACED = ByteSequenceWrapper.of("REPLACD");
    public static final ByteSequence RETIRED = ByteSequenceWrapper.of("RETIRED");
    public static final ByteSequence REVOLVER_TERM_LOAN = ByteSequenceWrapper.of("RVLVTRM");
    public static final ByteSequence SECURITIES_LOAN = ByteSequenceWrapper.of("SECLOAN");
    public static final ByteSequence WITHDRAWN = ByteSequenceWrapper.of("WITHDRN");
    public static final ByteSequence SECURITIES_PLEDGE = ByteSequenceWrapper.of("SECPLEDGE");

}