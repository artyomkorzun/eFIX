/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.f1x.message.fields;

// Generated by org.f1x.tools.DictionaryGenerator from QuickFIX dictionary
public enum EncryptMethod implements org.f1x.message.types.ByteEnum {
    NONE_OTHER((byte) '0'),
    PKCS((byte) '1'),
    DES((byte) '2'),
    PKCS_DES((byte) '3'),
    PGP_DES((byte) '4'),
    PGP_DES_MD5((byte) '5'),
    PEM_DES_MD5((byte) '6');

    private final byte code;

    EncryptMethod(byte code) {
        this.code = code;
    }

    public byte getCode() {
        return code;
    }

    public static EncryptMethod parse(String s) {
        switch (s) {
            case "0":
                return NONE_OTHER;
            case "1":
                return PKCS;
            case "2":
                return DES;
            case "3":
                return PKCS_DES;
            case "4":
                return PGP_DES;
            case "5":
                return PGP_DES_MD5;
            case "6":
                return PEM_DES_MD5;
        }
        return null;
    }

}